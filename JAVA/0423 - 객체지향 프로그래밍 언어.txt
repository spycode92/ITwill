자바는 객체지향 프로그래밍 언어 중의 하나
자바 언어를 잘 이해하기 위해서는 '객체' 대한 이해도를 높여야 함.

주체 : 객체의 반대, 나
객체 : 주체가 바라보는(파악하는) 모든 대상(사물, 개념 등)

객체의 구성 요소 = 속성, 기능
속성 = 변수, 기능 = 메서드

절차지향 프로그래밍
- 코드의 처음부터 마지막까지 위에서부터 아래로 명령이 수행되는 형태
- 특정한 코드가 반복되어 수행된다면 프로그램이 커질 뿐 아니라 변경이 되면 모든 부분을 수정해야 하는 일이 발생!

객체지향 프로그래밍
- 프로그램은 여러가지 변수와 명령어를 통해 다양한 동작들을 수행
- 프로그램이 커짐에 따라 프로그래밍을 하는 입장에서는 좀 더 효율적인 방법의 프로그래밍이 필요 하게 되었음!
- 프로그램 내에서 사용되는 연광성이 있는 변수와 동작(메서드)들을 모아 하나의 개념으로 만들었는데 이를 '클래스'라고 함
- 클래스는 현실세계의 '설계도'라고 할 수 있으며 설계도(클래스)를 통해 객체를 생성하게 됨
- 객체 지향 프로그래밍(OOP: Object-Oriented Programming)은 연관된 속성(변수)과 동작(메서드)들을 클래스 형태로 설계하고, 이를 통해 어려개의 객체를 생성하여 필요한 부품을 만들고 이를 조립하는 거대한 프로그래밍이라고 볼 수 있음.

분석 과정
1. 공통적인 요소만 뽑아내는 방법(= 일반화)
2. 공통된 틀을 만들고, 각 특징을 포함해서 분석하는 방법(= 구체화)

ex) 학생
초등학생, 중학생, 고등학생, 대학생

분석 단계를 거치면 분석 결과를 통해 설계도를 만들어냄
=> 자바에서는 클래스의 정의 단계라고 볼 수 있음.

객체 지향 프로그래밍의 절차
1. 요구사항 분석
2. 클래스의 설계(정의)
3. 설계된 클래스로부터 객체 생성(인스턴스 생성)
4. 인스턴스를 통한 프로그램 구현

