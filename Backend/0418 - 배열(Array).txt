[ 배열(Array) ]
- 복수개의 데이터를 하나의 묶음으로 관리하기 위한 자료구조
  => 일반 변수는 한 번에 하나의 값만 저장 가능하지만
     배열은 한 번에 여러개의 값(데이터)을 저장 가능하며 하나의 변수로 모두 처리 가능
- 배열도 객체이다.
- 배열은 복수개의 데이터가 저장되는 공간을 인덱스(번호)로 구분하며,
  배열의 인덱스는 0번부터 차례대로 자동 부여됨(n개 배열 : 0 ~ n-1 번까지)
  => 5개의 데이터 저장이 가능한 배열 공간의 인덱스는 0 ~ 4번까지 부여됨  

[ 자바스크립트에서의 배열 ]
- Array 객체 사용
- new Array() 형식으로 배열 객체(인스턴스) 생성 가능
  (필요에 따라 Array() 괄호 내부에 배열 크기를 정수로 지정 가능함)
- 배열객체명.length 속성을 통해 배열의 크기(길이) 리턴 가능(자바와 동일)
- 자바의 배열과 달리 자바스크립트에서의 배열은 생성 후에도 크기가 변할 수 있다!
- 하나의 배열에 저장되는 데이터 타입에는 제한이 없다!
  (정수, 실수, 문자열, 객체, 배열, 함수 등 모든 타입 저장 가능)
- 단순히 배열 내의 요소 전체를 출력하기 위해서는 출력문에 배열명만 지정하면 출력 가능

< 배열 생성 기본 문법 >
1. 배열에 저장할 데이터가 미리 준비되지 않은 경우(배열만 먼저 생성하는 경우)
=> new Array(); 또는 new Array(배열크기);
=> let 변수명 = new Array(); (배열 생성 후 해당 배열을 좌변의 변수에 저장)

2. 배열에 저장할 데이터가 미리 준비된 경우(배열 생성 시점에서 데이터를 저장하는 경우)
=> let 변수명 = [데이터1, 데이터2, ..., 데이터n];
   또는
   let 변수명 = Array(데이터1, 데이터2, ..., 데이터n);

< 배열 접근 기본 문법 >
배열명[인덱스]
=> 배열에 데이터 저장 시 배열명[인덱스] = 데이터; 형식으로 저장
   (메서드를 호출하여 저장하는 방법도 있음)
   
< 배열을 순차적으로 접근하는 기본 문법 = 공식 >
=> for문을 활용하여 배열의 첫번째 인덱스(0)부터 마지막 인덱스(배열크기 - 1) 까지 반복

for(let i = 0; i < 배열명.length; i++) {}
=> 제어변수 i 를 배열의 인덱스로 활용