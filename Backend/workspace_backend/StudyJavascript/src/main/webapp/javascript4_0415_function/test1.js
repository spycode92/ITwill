/*
< 함수 정의(선언) 기본 문법 >
function 함수명([매개변수...]) {
	// 외부로부터 함수 호출 시 실행될 코드들...
	[return [데이터];]
}
*/

// [ 전달인자도 없고, 리턴값도 없는 함수 정의 ]
// => 전달인자(함수 호출 시 전달하는 데이터)가 없으므로, 함수에서 전달받을 데이터도 없음 
//    따라서, 함수 정의 시 함수명 뒤의 소괄호() 부분에 아무것도 기술하지 않음
// 1. "Hello, World!" 문자열을 출력하는 함수 hello() 정의
function hello() {
	// hello() 함수 호출되면 실행될 코드들을 기술하는 위치
	document.write(`Hello, World!<br>`);
} // hello() 함수 끝 => 함수 실행이 끝나면 호출한 원래 위치로 코드의 흐름이 되돌아 감

// -------------------------------------------------------------------------------------
// 2. "Hello, World!" 문자열을 5번 반복 출력하는 hello2() 함수 정의
function hello2() {
	for(let i = 1; i <= 5; i++) {
		document.write(`${i} : Hello, World!<br>`);
	}
}
// -------------------------------------------------------------------------------------
// 3. 구구단 2단을 출력하는 gugudan() 함수 정의
function gugudan() {
	let dan = 2;
	document.write(` < ${dan} 단 ><br>`);
	
	for(let i = 1; i <= 9; i++) {
		document.write(`${dan} * ${i} = ${dan * i}<br>`);
	}
}
// -------------------------------------------------------------------------------------
// 4. 1 ~ 10 까지 정수의 합을 계산하여 결과값(55)를 출력하는 sum() 함수 정의
//    => 출력 예시 : 1 ~ 10 까지의 합 = 55
function sum() {
	let total = 0;
	
	for(let i = 1; i <= 10; i++) {
		total += i;
	}
	
	document.write(`1 ~ 10 까지의 합 = ${total}<br>`);
}
// -------------------------------------------------------------------------------------
// 5. 버튼 클릭 시 호출되는 printMsg() 함수 정의
// => "printMsg 버튼 클릭됨!" 출력
function printMsg() {
	console.log("printMsg 버튼 클릭됨!");
}
























