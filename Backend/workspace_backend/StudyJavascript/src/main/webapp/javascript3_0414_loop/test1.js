/*
[ 반복문(Loop) ]
- 특정 문장(들)을 원하는 횟수(또는 상황)만큼 반복하는 문
- 주어진 조건식을 판별하여 조건이 true 일 동안 반복문을 수행하는 구조
- for 문과 while 문으로 나뉘어짐(문법 구조가 약간 다름)
  1) for 문 : 주로 반복 횟수가 정해져 있는 경우 사용(ex. 밥을 10번 먹기)
  2) while 문 : 주로 반복 횟수가 정해져 있지 않은 경우 사용(ex. 밥을 밥 공기가 빌 때까지 먹기)
  => for 문과 while 문은 상호 변환이 100% 가능하다!
==============================================================================================
[ for문 ]
for(①초기식; ②조건식; ④증감식) {
	// ③ 조건식 판별 결과가 true 일 경우 반복 수행할 문장들...
	// 반복 1회 끝나면 중괄호(}) 위치에서 4번 - 증감식 위치로 이동
}

1) 초기식 : 반복 횟수를 결정하는데 사용할 변수 값을 초기화하는 코드(변수 선언까지도 가능)
2) 조건식 : 반복 횟수를 결정하는데 사용되는 목표값을 지정하는 식
            => 판별 결과가 true 이면 블럭 내의 코드를 실행하고, false 이면 for문 종료
3) 실행문 : 조건식 판별 결과가 true 일 때 실행할 문장들을 기술
4) 증감식 : 반복 횟수를 결정하는데 사용되는 변수의 증감을 위한 식
=> for문은 최초 1번을 한 번 실행 후 2번 조건식을 판별하여 true 일 동안
   3번 -> 4번 -> 2번 과정을 반복 실행함
*/

// 1. document.write() 메서드로 "Hello, World!" 문자열 5번 출력 => 반복문 사용X
document.write("1 : Hello, World!<br>");
document.write("2 : Hello, World!<br>");
document.write("3 : Hello, World!<br>");
document.write("4 : Hello, World!<br>");
document.write("5 : Hello, World!<br>");

document.write("<hr>");
// 2. 위의 작업을 for문을 통해 동일하게 수행
// => 제어변수 i 가 1부터 시작해서 5보다 작거나 같을 동안(1 ~ 5까지)
//    i값을 1씩 증가하면서 "Hello, World!" 출력
for(let i = 1; i <= 5; i++) {
	// for 문 내에서는 제어변수(i) 값도 일반 변수랑 동일하게 활용 가능
	document.write(`${i} : Hello, World!<br>`); // 5회 반복됨
} // for문 반복 끝

//document.write(`for문 종료됨 - ${i}<br>`);
// => 주의! for문에서 선언된 변수를 for문이 끝난 후 for문 바깥에서 접근할 경우
//    해당 변수가 존재하지 않아 오류가 발생함(i is not defined)
// => 따라서, 해당 변수를 for문 종료 후에도 사용하려면
//    1) 변수 선언 키워드를 let 대신 var 사용 또는 2) for문 시작 전 윗쪽에서 변수 선언
/*
---------------------------------------------------------------------------------------
위의 반복문(for)에 대한 디버깅(Debugging) 과정 추적                  
---------------------------------------------------------------------------------------
초기식(i)   조건식(i <= 5)   실행문(${i} : Hello, World!<br> 출력)      증감식(i++)
---------------------------------------------------------------------------------------
  i = 1         true          "1 : Hello, World!" 출력됨              i = 1 -> 2 증가
  i = 2         true          "2 : Hello, World!" 출력됨              i = 2 -> 3 증가
  i = 3         true          "3 : Hello, World!" 출력됨              i = 3 -> 4 증가
  i = 4         true          "4 : Hello, World!" 출력됨              i = 4 -> 5 증가
  i = 5         true          "5 : Hello, World!" 출력됨              i = 5 -> 6 증가
  i = 6         false         for문 반복 종료하고 빠져나감(끝)
*/

document.write("<hr>");
// ======================================================================================
// [ for문 연습 ]
// 제어변수 i값이 1 ~ 10 까지 1씩 증가하면서 i값 차례대로 출력(1 2 3 4 5 6 7 8 9 10 출력)
for(let i = 1; i <= 10; i++) {
	document.write(`${i} `);
}
document.write("<hr>");
// --------------------------------
// 제어변수 i값이 1 ~ 10 까지 2씩 증가하면서 i값 차례대로 출력(1 3 5 7 9 출력)
for(let i = 1; i <= 10; i += 2) {
	document.write(`${i} `);
}
document.write("<hr>");

// 제어변수 i값이 2 ~ 10 까지 2씩 증가하면서 i값 차례대로 출력(2 4 6 8 10 출력)
for(let i = 2; i <= 10; i += 2) {
	document.write(`${i} `);
}
document.write("<hr>");

// 제어변수 i값이 10 ~ 1 까지 1씩 감소하면서 i값 차례대로 출력(10 9 8 7 6 5 4 3 2 1 출력)
for(let i = 10; i >= 1; i--) {
	document.write(`${i} `);
}
document.write("<hr>");

// ======================================================================================
// for 문과 if 문의 조합
// => 1) for 문 안에 if 문을 사용하여 반복 과정에서 조건을 추가하거나
//    2) if 문 안에 for 문을 사용하여 특정 조건일 때 반복을 수행
// => 1번 예시) 제어변수 i 값이 1 ~ 10 까지 1씩 증가할 동안 짝수만 출력
for(let i = 1; i <= 10; i++) {
	// 짝수일 때만 출력문이 실행되도록 if 문 사용
	if(i % 2 == 0) {
		document.write(`${i} `);
	}
}
// ======================================================================================
document.write("<hr>");

// 제어변수 i값이 1 ~ 10 까지 1씩 증가하면서 제어변수 i값을 테이블에 출력하기
// 1) 테이블 시작 태그와 제목열을 출력하는 태그는 반복문 시작 전에 먼저 출력
document.write(`<table border="1">`);
document.write(`	<tr><th>i값</th></tr>`);

// 2) for문을 사용하여 제어변수 1 ~ 10 까지 1씩 증가하도록 제어하면서
//    <tr><td> 태그 조합하여 i값을 반복 출력
for(let i = 1; i <= 10; i++) {
	document.write(`	<tr>`);
	document.write(`		<td>${i}</td>`);
	document.write(`	</tr>`);
}

// 3) 테이블 끝 태그는 반복문 종료 후 마지막에 출력
document.write(`</table>`);

document.write("<hr>");
// 테이블 숫자를 가로로 출력
document.write(`<table border="1">`);
document.write(`	<tr>`);
document.write(`		<th>i값</th>`);

// 2) for문을 사용하여 제어변수 1 ~ 10 까지 1씩 증가하도록 제어하면서
//    <tr><td> 태그 조합하여 i값을 반복 출력
for(let i = 1; i <= 10; i++) {
	document.write(`	<td>${i}</td>`);
}

// 3) 테이블 끝 태그는 반복문 종료 후 마지막에 출력
document.write(`	</tr>`);
document.write(`</table>`);
document.write(`<hr>`);
// ================================================================
// for문을 사용하여 구구단 1개의 단 출력하기
// 1) 출력할 구구단을 prompt() 함수로 입력받아 변수(dan)에 저장하기
let dan = prompt("구구단을 입력하세요.");

// 2) 입력받은 단을 출력하기(ex. dan = 2 일 때 : < 2단 > )
document.write(` < ${dan}단 ><br>`);

/*
3) 입력받은 단에 대한 구구단 출력하기
ex) dan = 2 일 때

2 * 1 = 2
2 * 2 = 4
2 * 3 = 6
2 * 4 = 8
2 * 5 = 10
2 * 6 = 12
2 * 7 = 14
2 * 8 = 16
2 * 9 = 18
*/
for(let i = 1; i <= 9; i++) {
	document.write(`${dan} * ${i} = ${dan * i}<br>`);
}











